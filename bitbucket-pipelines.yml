# This is a sample build configuration for Python.
# Check our guides at https://confluence.atlassian.com/x/x4UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: python:3.5.1

pipelines:
  default:
    - step:
        caches:
          - pip
          - docker
        script: 
          # Install, compile and test app
          - pip install -r app/requirements.txt
          - python -m compileall app
          - python app/manage.py test
          # Build image
          - SHORT_HASH=`git log -1 --pretty=format:%h`
          - IMAGE_NAME=$DOCKER_REGISTRY/pyapp
          - IMAGE_NAME_WITH_TAG=$IMAGE_NAME:$SHORT_HASH
          - docker build -t $IMAGE_NAME_WITH_TAG -f docker/Dockerfile .
          - docker tag $IMAGE_NAME_WITH_TAG $IMAGE_NAME:latest
          - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
          - docker push $IMAGE_TAG
          # Install kubectl
          - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          - chmod +x ./kubectl
          - mv ./kubectl /usr/local/bin/kubectl
          # Configure kubectl
          - kubectl config set-cluster default-cluster --server=$CLUSTER_URL --insecure-skip-tls-verify=true
          - kubectl config set-credentials default-user --bearer=$CLUSTER_TOKEN
          - kubectl config set-context default --cluster=default-cluster --user=default-user
          - kubectl config use-context default
          # Update app in kubernetes
          - kubectl apply -f docker/all.yml
options:
  docker: true