apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-vol-$BRANCH
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: app-$BRANCH
spec:
  replicas: 1
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: app
        branch: $BRANCH
    spec:
      containers:
      - name: app
        image: miosaksregistry.azurecr.io/pyapp:$TAG
        env:
        - name: "PYTHONUNBUFFERED"
          value: "0"
        ports:
        - containerPort: 80
      - name: db
        image: postgres
        ports:
        - containerPort: 80
        volumeMounts:
        - name: pg-data-volume
          mountPath: /var/lib/postgresql/dat
      imagePullSecrets:
      - name: "miosaksregistry"
      volumes:
      - name: pg-data-volume
        persistentVolumeClaim:
          claimName: app-vol-$BRANCH
---
apiVersion: v1
kind: Service
metadata:
  name: app-$BRANCH
  labels:
    app: app
    branch: $BRANCH
spec:
  type: NodePort
  ports:
  - port: 80
  selector:
    app: app
    branch: $BRANCH
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: app-$BRANCH
  labels:
    app: app
    branch: $BRANCH
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: "$BRANCH.k8s.monogra.fi"
    http:
      paths:
      - path: /
        backend:
          serviceName: app-$BRANCH
          servicePort: 80